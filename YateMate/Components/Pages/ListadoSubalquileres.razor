@page "/ListadoSubalquileres"
@rendermode InteractiveServer
@using YateMate.Aplicacion.UseCases.Subalquiler
@using YateMate.Components.Shared
@inject IDialogService Dialog
@inject ObtenerSubalquileresUseCase ObtenerSubalquileresUseCase
@inject ObtenerDuenioSubalquilerUseCase ObtenerDuenio

<MudDialogProvider  FullWidth="true"
                    MaxWidth="MaxWidth.Small"
                    Position="DialogPosition.CenterLeft"/>

<h1>Subalquileres disponibles</h1>
<title>Subalquileres</title>

    @if (!_tieneElementos)
    {
    <h2>No hay subalquileres disponibles.</h2>
    }
    else
    {
        <MudContainer>
            <MudTable Items="_lista" Class="mt-4" Dense="true" Outlined="true">
                <HeaderContent>
                    <MudTh>Fecha de inicio</MudTh>
                    <MudTh>Fecha de fin</MudTh>
                    <MudTh>Dueño</MudTh>
                    <MudTh>Acción</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        @context.FechaInicio.ToString("d")
                    </MudTd>
                    <MudTd>
                        @context.FechaFin.ToString("d")
                    </MudTd>
                    @{
                        duenio = ObtenerDuenio.Ejecutar(context.IdDuenio);
                    }
                    <MudTd>
                        @duenio.Nombre @duenio.Apellido
                    </MudTd>
                    <MudTd>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => VerSubalquiler(@context))">Ver Mas </MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudContainer>
    }
@code {
    List<Subalquiler> _lista = new();
    bool _tieneElementos;
    ApplicationUser duenio;
    
    protected override void OnInitialized()
    {
        _lista = ObtenerSubalquileresUseCase.Ejecutar();
        _tieneElementos = _lista.Count > 0;
    }

    public void VerSubalquiler(Subalquiler subalquiler)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var parameters = new DialogParameters<VerDatosSubalquilerPublicado>();
        parameters.Add(x => x.Subalquiler, subalquiler);
        Dialog.Show<VerDatosSubalquilerPublicado>("Ver Datos", parameters, options);
    }
}